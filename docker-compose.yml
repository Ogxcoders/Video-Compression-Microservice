version: '3.8'

services:
  app:
    build: .
    container_name: compressor-api
    ports:
      - "3000:3000"
    environment:
      - API_KEY=${API_KEY}
      - ALLOWED_DOMAINS=${ALLOWED_DOMAINS}
      - PORT=3000
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_VIDEO_FILE_SIZE=${MAX_VIDEO_FILE_SIZE:-5000000000}
      - MAX_IMAGE_FILE_SIZE=${MAX_IMAGE_FILE_SIZE:-500000000}
      - TEMP_DIR=/tmp/compression
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgres://compressor:compressor123@db:5432/compression?sslmode=disable
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-5}
      - JOB_TIMEOUT=${JOB_TIMEOUT:-3600}
      - QUEUE_CHECK_INTERVAL=${QUEUE_CHECK_INTERVAL:-5}
      - FFMPEG_PATH=/usr/bin/ffmpeg
      - IMAGEMAGICK_PATH=/usr/bin/convert
      - WORDPRESS_API_URL=${WORDPRESS_API_URL}
      - WORDPRESS_USERNAME=${WORDPRESS_USERNAME}
      - WORDPRESS_APP_PASSWORD=${WORDPRESS_APP_PASSWORD}
      - MAX_RETRIES=${MAX_RETRIES:-3}
    depends_on:
      - redis
      - db
    volumes:
      - ./tmp:/tmp/compression
    restart: unless-stopped
    networks:
      - compressor-network

  redis:
    image: redis:7-alpine
    container_name: compressor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - compressor-network

  db:
    image: postgres:15-alpine
    container_name: compressor-db
    environment:
      - POSTGRES_DB=compression
      - POSTGRES_USER=compressor
      - POSTGRES_PASSWORD=compressor123
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - compressor-network

  nginx:
    image: nginx:alpine
    container_name: compressor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - compressor-network

volumes:
  redis-data:
  postgres-data:

networks:
  compressor-network:
    driver: bridge
